container.bootcamp{
  ausleihen {
    port = "8087"
    port = ${?CONTAINER_BOOTCAMP_AUSLEIHEN_PORT}
  }
  einbuchen {
    url = "http://localhost:8080/events"
    url = ${?CONTAINER_BOOTCAMP_EINBUCHEN_URL}
  }
  reservieren {
    url = "http://localhost:5001/events"
    url = ${?CONTAINER_BOOTCAMP_RESERVIEREN_URL}
  }
}


akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "debug"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"


  persistence {
    journal.plugin = "pg-journal"
    snapshot-store.plugin = "pg-snapshot"

    pg.journal.query {
      class = "akka.persistence.pg.journal.query.PostgresReadJournalProvider"
      write-plugin = "pg-journal"
      refresh-interval = 20ms
      max-buffer-size = 100
    }

  }

  actor {
    debug {
      lifecycle = off
      unhandled = off
      event-stream = off
    }
  }
}

pg-persistence {

  eventstore.encoder: "container.bootcamp.ausleihen.util.GenericEncoderJson"
  eventstore.tagger: "container.bootcamp.ausleihen.books.BookEventUpdatedTagger"

  db {
    user = "ausleihen"
    user = ${?CONTAINER_BOOTCAMP_AKKA_PERSISTENCE_USER}
    password = "ausleihen"
    password = ${?CONTAINER_BOOTCAMP_AKKA_PERSISTENCE_PASSWORD}
    url = "jdbc:postgresql://localhost:5432/ausleihen"
    url = ${?CONTAINER_BOOTCAMP_AKKA_PERSISTENCE_JDBC_URL}
  }
}