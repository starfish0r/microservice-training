

apiVersion: v1
kind: ConfigMap
metadata:
  name: varnish-for-einbuchen
data:
  default.vcl: |-
    vcl 4.0;
    backend default {
        .host = "localhost";
        .port = "80";
    }
    backend assets {
        .host = "assets";
        .port = "80";
    }
    sub vcl_backend_response {
        set beresp.do_esi = true;
    }
    sub vcl_recv {
        if (req.http.host == "assets") {
            set req.backend_hint = assets;
        } else {
            set req.backend_hint = default;
        }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: einbuchen-config
data:
  MONGO_SERVER: "mongo"
  INTERFACE: "0.0.0.0"
  PORT: "80"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: einbuchen
spec:
  replicas: 3
  selector:
    matchLabels:
      app: einbuchen
  template:
    metadata:
      labels:
        app: einbuchen
        role: backend
    spec:
      initContainers:
      - name: config-creator
        image: busybox
        envFrom:
        - configMapRef:
            name: einbuchen-config
        command: ['/bin/sh', '-c', 'echo {\"mongoes\": {\"mongouri\": \"mongodb://$MONGO_SERVER:27017/einbuchen\"} ,\"bind-interface\": \"$INTERFACE\", \"bind-port\": \"80\"} > /etc/config/config.json']
        volumeMounts:
         - name: config-volume
           mountPath: /etc/config
      containers:
      - name: einbuchen
        image: starfish0r/einbuchen:latest
        ports:
        - containerPort: 80
        args: ["-conf", "/etc/config/config.json"]
        volumeMounts:
         - name: config-volume
           mountPath: /etc/config
      - name: varnish-esi-einbuchen
        image: million12/varnish
        env:
          - name: VCL_CONFIG
            value: /etc/varnish/default.vcl
          - name: VARNISHD_PARAMS
            value: -a 0.0.0.0:8080
        volumeMounts:
        - name: varnish-config-volume
          mountPath: /etc/varnish/
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: varnish-config-volume
        configMap:
          name: varnish-for-einbuchen
          

---
apiVersion: v1
kind: Service
metadata:
  name: www-einbuchen
spec:
  type: LoadBalancer
  ports:
    - port: 8090
      targetPort: 8080
      protocol: TCP
  selector:
    app: einbuchen

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: ingress-einbuchen
spec:
  rules:
  - host: 3.g.ch.innoq.io
    http:
      paths:
      - path: /einbuchen
        backend:
          serviceName: www-einbuchen
          servicePort: 8090

